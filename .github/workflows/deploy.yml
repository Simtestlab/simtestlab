name: Deploy MkDocs to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with MkDocs
        env:
          MKDOCS_AUTH_USERNAME: ${{ secrets.DOCS_USERNAME }}
          MKDOCS_AUTH_PASSWORD: ${{ secrets.DOCS_PASSWORD }}
        run: |
          # Set default credentials if secrets are not provided
          export MKDOCS_AUTH_USERNAME="${MKDOCS_AUTH_USERNAME:-admin}"
          export MKDOCS_AUTH_PASSWORD="${MKDOCS_AUTH_PASSWORD:-password}"

          # Build the site
          mkdocs build --clean

          # Inject credentials into the built HTML files
          find site -name "*.html" -type f -exec sed -i "s/window\.MKDOCS_AUTH_USERNAME = \".*\"/window.MKDOCS_AUTH_USERNAME = \"$MKDOCS_AUTH_USERNAME\"/" {} \;
          find site -name "*.html" -type f -exec sed -i "s/window\.MKDOCS_AUTH_PASSWORD = \".*\"/window.MKDOCS_AUTH_PASSWORD = \"$MKDOCS_AUTH_PASSWORD\"/" {} \;

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4